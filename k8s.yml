kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: service-discoverer
rules:
  - apiGroups: [""]
    resources: ["services", "endpoints", "configmaps", "secrets", "pods"]
    verbs: ["get", "watch", "list"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: default-service-discoverer
subjects:
  - kind: ServiceAccount
    name: default
roleRef:
  kind: Role
  name: service-discoverer
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "k8s-terraform-controller"
spec:
  selector:
    matchLabels:
      app: "k8s-terraform-controller"
  template:
    metadata:
      labels:
        app: "k8s-terraform-controller"
    spec:
      imagePullSecrets:
        - name: regcred-github
      containers:
        - name: "k8s-terraform-controller"
          image: "docker.pkg.github.com/miguelaferreira/k8s-terraform-controller/java11:latest"
          imagePullPolicy: Always
#          ports:
#            - name: http
#              containerPort: 8080
#          readinessProbe:
#            httpGet:
#              path: /health
#              port: 8080
#            initialDelaySeconds: 5
#            timeoutSeconds: 3
#          livenessProbe:
#            httpGet:
#              path: /health
#              port: 8080
#            initialDelaySeconds: 5
#            timeoutSeconds: 3
#            failureThreshold: 10
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: leader-election
rules:
  - apiGroups: [""]
    resources: ["configmap", "endpoints"]
    verbs: ["get", "create", "update"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: default-leader-election
subjects:
  - kind: ServiceAccount
    name: default
roleRef:
  kind: Role
  name: leader-election
  apiGroup: rbac.authorization.k8s.io
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: secret-watcher
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "watch", "list"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: default-secret-watcher
subjects:
  - kind: ServiceAccount
    name: default
roleRef:
  kind: Role
  name: secret-watcher
  apiGroup: rbac.authorization.k8s.io
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: job-creator
rules:
  - apiGroups: [""]
    resources: ["jobs"]
    verbs: ["get", "watch", "list", "update", "create", "path", "delete"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: default-job-creator
subjects:
  - kind: ServiceAccount
    name: default
roleRef:
  kind: Role
  name: job-creator
  apiGroup: rbac.authorization.k8s.io
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: event-publisher
rules:
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["get", "watch", "list", "create"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: default-event-publisher
subjects:
  - kind: ServiceAccount
    name: default
roleRef:
  kind: Role
  name: event-publisher
  apiGroup: rbac.authorization.k8s.io
