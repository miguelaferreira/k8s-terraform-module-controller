# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build_java:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Docker login GitHub Packages (GITHUB_TOKEN)
        shell: bash
        env:
          DOCKER_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run:  docker login https://docker.pkg.github.com -u publisher --password ${DOCKER_TOKEN}
      - uses: actions/checkout@v2
      - run: git fetch --prune --unshallow --tags
      - uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Cache Gradle
        id: cache-gradle
        uses: actions/cache@v1
        with:
          path: ~/.gradle
          key: ${{ runner.os }}-gradle
      - name: Build
        uses: eskatos/gradle-command-action@v1
        with:
          gradle-version: 6.3
          arguments: clean assemble
      - name: Package and push container
        uses: eskatos/gradle-command-action@v1
        with:
          gradle-version: 6.3
          arguments: jib -x test # tests require kubectl proxy to work

  build_modules_container:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Build images
        shell: bash
        env:
          DOCKER_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
        run: |
          container_tag="${GITHUB_REF/refs\/pull\//pr-}"
          .github/scripts/build-containers.sh "${container_tag/\/merge/}-$( git rev-parse --short HEAD )"
